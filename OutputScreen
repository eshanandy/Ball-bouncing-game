<b> <h3> CLASSES AND FUNCTIONS USED: </h3></b>
The classes, each member functions and member variables are listed below.

<b><h4>CLASS BALL (all variables are protected) </h4></b>

int x 	STORES LOCUS OF BALL ALONG COLUMNS
int y	STORES LOCUS OF BALL ALONG ROWS
int xdir	STORES THE DIRECTION OF X
int ydir	STORES THE DIRECTION OF Y
<b>void move(int r, int c) </b>	TAKES THE ROW AND COLUMN OF PLAY AREA AS PARAMETERS AND UPDATES THE POSITION OF THE BALL (updates x,y as (x+xdir,y+ydir)

CLASS SLIDER (all variables are public – the slider is user accessible)

Int col 	TOTAL SPACE AVAIALABLE FOR THE SLIDER TO MOVE. EQUALS TO THE NUMBER OF COLUMNS OF THE PLAY AREA
Int size 	LENGTH OF SLIDER. THIS VARIABLE IS USED ONLY IN THE BEGINNING TO INITIALIZE right & left. THIS VARIABLE IS NOT USED AFTER THAT.
Int right, int left	STORES LOCUS/INDEX OF RIGHTMOST AND LEFTMOST UNIT OF SLIDER. INITIALLY, right=(col+size)/2 and left=(col-size)/2+1.
Char *sl	CHARACTER ARRAY STORING THE SLIDER UNITS AND WHITE SPACES. THE LENGTH OF THIS ARRAY IS EQUAL TO col.
Void move(char)	TAKES USER INPUT (‘A’ OR ‘D’ OR ‘J’ OR ‘L’) AND UPDATES THE VALUES OF right & left ACCORDINGLY OF THE ‘this’ OBJECT.
Void updateslider()	UPDATES SLIDER ARRAY (sl). VACATES THE WHOLE ARRAY EXCEPT POSITIONS LYING BETWEEN ‘right’ and ‘left’
Void reducesize()	Void reducesize() REDUCES SLIDER SIZE. (right=right-1, left =left+1)

CLASS GAME : inherits publicly from CLASS BALL AND CLASS SLIDER (unless otherwise mentioned all are
private members)

char** 	playarea THE PLAY AREA MATRIX
int row	NUMBER OF ROWS OF PLAY AREA (NO OF COLS IS INHERITED)
Int score	STORES SCORE.
Int level 	STORES LEVEL.
Int gamemode	 =1 FOR 1P MODE, =2 FOR 2P MODE
Slider s2 	OBJECT OF SLIDER CLASS. USED AS 2P SLIDER. (NOTE THAT THE 1P SLIDER ARRAY *sl IS ALREADY INHERITED BY THE CLASS). IT DOESNOT REQUIRE AN OBJECT TO MANIPULATE THE MANIPULATES THE 2P SLIDER.1P SLIDER. WHEREAS S2
Int menu() 	DISPLAYS MENU
Void print()	DISPLAYS THE GAME BOARD WITH 2 SLIDERS AND THE WALL
Void showscores() 	Void showscores() DISPLAYS TOP 3 HIGHSCORES OF ALL TIME
Void instructions()	DISPLAYS MANUAL
Void initialize() 	INITIALIZES x,y,xdir,ydir,this->right,this->left, s2.right, s2.left, playarea[], this->sl, s2.sl
 	 
Void updateboard() 	UPDATES playarea ACCORDING TO THE NEWEST POSITION OF BALL(x,y)
Void updatescore()	AFTER GAMEOVER, UPDATES HIGHSCORE FILE.
Void settings()	USER CAN TWEAK SLIDER SIZE AND GAME AREA
Void play() (public) 	ORCHESTRATES THE WHOLE GAME. (SEE FLOWCHART)
Game(int,int) (public) 	CONSTRUCTOR USED TO INITIALIZE level, score and size. THE TWO INPUT PARAMETERS ARE ASSIGNED TO row & col RESPECTIVELY.DESTRUCTOR. DELAYS THE GAME WHEN A NEW OBJECT IS CREATED OR DESTROYED WHEN USER RESTARTS THE GAME OR QUITS THE GAME.
